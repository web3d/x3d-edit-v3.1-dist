#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xslt
# http://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: SAXON 8.7 from Saxonica

# [X3D] VRML V3.0 utf8
# PROFILE Immersive
# [X3D] version=3.0
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.0.xsd
# [head]

# META "title" "EventUtilityPrototypes.x3d"
# META "description" "Event utility node prototypes for boolean filtering and other event utility nodes."
# META "authors" "Nick Polys, Tony Parisi, Don Brutzman, Justin Couch"
# META "created" "25 September 2002"
# META "modified" "28 April 2005"
# META "warning" "Under development, IntegerTrigger example needed."
# META "reference" "EventUtilityExamples.x3d"
# META "subject" "BooleanFilter BooleanToggle BooleanTrigger IntegerTrigger TimeTrigger"
# META "identifier" "http://www.web3d.org/x3d/content/examples/Basic/development/EventUtilityPrototypes.x3d"
# META "generator" "X3D-Edit, http://www.web3d.org/x3d/content/README.X3D-Edit.html"
# META "license" "../../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

PROTO BooleanFilter [
  # [appinfo] BooleanFilter selectively passes true false or negated events.

  eventIn      SFBool	set_boolean    # [appinfo] set_boolean is the input value to be filtered.

  eventOut     SFBool	inputTrue    # [appinfo] inputTrue only passes a true value when set_boolean input is true.

  eventOut     SFBool	inputFalse    # [appinfo] inputFalse only passes a false value when set_boolean is false.

  eventOut     SFBool	inputNegate    # [appinfo] inputNegate provides opposite value by negating set_boolean input.

] {
  DEF BooleanFilterScript Script {
    eventIn      SFBool	set_boolean IS set_boolean
    eventOut     SFBool	inputTrue IS inputTrue
    eventOut     SFBool	inputFalse IS inputFalse
    eventOut     SFBool	inputNegate IS inputNegate
                            
	url [ "javascript:
// ### X3D Browser.print() not supported by all VRML97 viewers, instead simply use print()


function set_boolean (value, timestamp)
{
	if (value) inputTrue  = value;
	else       inputFalse = value;
	inputNegate = !value;

//	if (value) print ('[BooleanFilter] set_boolean=' + value + ', inputTrue='  + inputTrue  + ', inputNegate=' + inputNegate);
//	else       print ('[BooleanFilter] set_boolean=' + value + ', inputFalse=' + inputFalse + ', inputNegate=' + inputNegate);
}
      
        
" ]
  }
}
# ========================================
PROTO BooleanToggle [
  # [appinfo] BooleanToggle maintains state and negates output when a true input is provided.

  eventIn      SFBool	set_boolean    # [appinfo] If set_boolean input is true toggle state.

  # warning: toggle depends on exposedField functionality in Script node, not compatible with VRML 97. implemented as inputOnly/initializeOnly/outputOnly triplet.
  eventIn      SFBool	set_toggle    # [appinfo] Reset persistent state value.

   ### Error:  ProtoInterface <field name='toggle'/> is unreferenced in ProtoBody with no corresponding IS/connect/@protoField
field        SFBool	toggle FALSE    # [appinfo] Persistent state value that gets toggled or reset.

  eventOut     SFBool	toggle_changed    # [appinfo] Output toggled persistent state value.

] {
  Group {
    children [
        DEF BooleanToggleScript Script {
          eventIn      SFBool	set_boolean IS set_boolean
          eventIn      SFBool	set_toggle IS set_toggle
          field        SFBool	toggle FALSE
          eventOut     SFBool	toggle_changed IS toggle_changed
          field        SFBool	traceEnabled FALSE
                                              
	url [ "javascript:
// ### X3D Browser.print() not supported by all VRML97 viewers, instead simply use print()


function initialize ()
{
	if (traceEnabled) print ('[BooleanToggle] toggle=' + toggle);

}
function set_boolean (value, timestamp)
{
	if (value == true)  // only toggle on true input
	{
		if (toggle == true) toggle = false;
		else                toggle = true;
	}
	toggle_changed = toggle;
//	print ('[BooleanToggle] traceEnabled=' + traceEnabled);
	if (traceEnabled) print ('[BooleanToggle] set_boolean=' + value + ', toggle=' + toggle);
}
function set_toggle (value, timestamp)
{
	toggle = value;
	toggle_changed = toggle;
	if (traceEnabled) print ('[BooleanToggle] set_toggle=' + set_toggle);
}
          
" ]
        }
    ]
  }
}
# ========================================
PROTO BooleanTrigger [
  # [appinfo] BooleanTrigger converts time events to boolean true events.

  eventIn      SFTime	set_triggerTime    # [appinfo] set_triggerTime provides input time event typical event sent is TouchSensor touchTime.

  eventOut     SFBool	triggerTrue    # [appinfo] triggerTrue outputs a true value whenever a triggerTime event is received.

] {
  DEF TriggerBooleanScript Script {
    eventIn      SFTime	set_triggerTime IS set_triggerTime
    eventOut     SFBool	triggerTrue IS triggerTrue
                
	url [ "javascript:
// ### X3D Browser.print() not supported by all VRML97 viewers, instead simply use print()


function set_triggerTime (value, timestamp)
{
	triggerTrue = true;
//	print ('triggerTrue = true');
}
      
        
" ]
  }
}
# ========================================
PROTO IntegerTrigger [
  # [appinfo] IntegerTrigger converts boolean true or time input events to integer value (suitable for Switch node).

  eventIn      SFBool	set_boolean    # [appinfo] If set_boolean input is true trigger output of integer value.

  eventIn      SFInt32	set_integerKey    # [appinfo] Resets value used for output when triggered later.

  exposedField SFInt32	integerKey -1    # [appinfo] integerKey is value for output when triggered.

  eventOut     SFInt32	integerKey_changed    # [appinfo] Reports change in integerKey value.

  eventOut     SFInt32	triggerValue    # [appinfo] triggerValue provides integer event output matching integerKey when true set_boolean received.

] {
  Group {
    children [
        DEF IntegerKeyHolder Switch {
                      whichChoice IS integerKey
        }
        DEF TriggerIntegerScript Script {
          eventIn      SFBool	set_boolean IS set_boolean
          eventIn      SFInt32	set_integerKey IS set_integerKey
          field        SFNode      integerKeyHolderNode             USE IntegerKeyHolder
          eventOut     SFInt32	integerKey_changed IS integerKey_changed
          eventOut     SFInt32	triggerValue IS triggerValue
          directOutput TRUE
                                                          
	url [ "javascript:

function set_boolean (inputValue, timestamp)
{
	if (inputValue == true)
	{
		integerKey = integerKeyHolderNode.whichChoice;
		triggerValue = integerKey; // send output event
	}
}
function set_integerKey (inputValue, timestamp)
{
	integerKey = inputValue;
	integerKeyHolderNode.whichChoice = integerKey;
	integerKey_changed = integerKey; // send output event
}
      
          
" ]
        }
    ]
  }
}
# ========================================
PROTO TimeTrigger [
  # [appinfo] TimeTrigger converts boolean true events to time events.

  eventIn      SFBool	set_boolean    # [appinfo] If set_boolean input is true trigger output time value.

  eventOut     SFTime	triggerTime    # [appinfo] triggerTime is output time event sent when set_boolean input is true.

] {
  DEF TriggerTimeScript Script {
    eventIn      SFBool	set_boolean IS set_boolean
    eventOut     SFTime	triggerTime IS triggerTime
                
	url [ "javascript:

function set_boolean (value, timestamp)
{
	if (value) triggerTime = timestamp;
}
      
        
" ]
  }
}
# ========================================
Anchor {
  description "EventUtilityExamples"
  parameter [ "target=_blank" ]
  url [ "EventUtilityExamples.wrl" "http://www.web3d.org/x3d/content/examples/Basic/development/EventUtilityExamples.wrl" "EventUtilityExamples.x3d" "http://www.web3d.org/x3d/content/examples/Basic/development/EventUtilityExamples.x3d" ]
  children [
      Shape {
        geometry Text {
          fontStyle FontStyle {
            justify [ "MIDDLE" "MIDDLE"  ] 
            size 0.9
          }
        }
        appearance Appearance {
          material Material {
            diffuseColor 1 1 0.2
          }
        }
      }
  ]
}
